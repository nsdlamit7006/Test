package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CitymasterAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCitymasterAllPropertiesEquals(Citymaster expected, Citymaster actual) {
        assertCitymasterAutoGeneratedPropertiesEquals(expected, actual);
        assertCitymasterAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCitymasterAllUpdatablePropertiesEquals(Citymaster expected, Citymaster actual) {
        assertCitymasterUpdatableFieldsEquals(expected, actual);
        assertCitymasterUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCitymasterAutoGeneratedPropertiesEquals(Citymaster expected, Citymaster actual) {
        assertThat(expected)
            .as("Verify Citymaster auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCitymasterUpdatableFieldsEquals(Citymaster expected, Citymaster actual) {
        assertThat(expected)
            .as("Verify Citymaster relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getCityCode()).as("check cityCode").isEqualTo(actual.getCityCode()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCitymasterUpdatableRelationshipsEquals(Citymaster expected, Citymaster actual) {}
}
